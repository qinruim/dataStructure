### 解题思路

左子树遍历很简单，主要在左子树遍历完成后对接右子树的情况比较麻烦。
需要加一个end节点来对接到右子树。

### 代码

* java

```java
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private TreeNode end;
    public void flatten(TreeNode root) {
     dfs(root);
    }

    private void dfs(TreeNode node) {
         if (node == null) {
            return;
        }
        end = node;
        TreeNode rightTmp = node.right;
        if (node.left != null) {
            dfs(node.left);
            node.right = node.left;
        }
        if (rightTmp != null) {
            end.right = rightTmp;
            dfs(rightTmp);
        }
        node.left = null;
    }
}
```

